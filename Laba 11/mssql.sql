CREATE TABLE USERS (
    USER_ID INT IDENTITY(1,1) PRIMARY KEY,
    USERNAME NVARCHAR(50) NOT NULL UNIQUE,
    PASSWORD NVARCHAR(50) NOT NULL,
    EMAIL NVARCHAR(100) NOT NULL UNIQUE,
    DEVICE NVARCHAR(50) NOT NULL,
    ROLE NVARCHAR(50) NOT NULL
);

CREATE TABLE SOFTWARE (
    SOFTWARE_ID INT IDENTITY(1,1) PRIMARY KEY,
    NAME NVARCHAR(100) NOT NULL UNIQUE,
    VERSION NVARCHAR(50) NOT NULL,
    VENDOR NVARCHAR(100) NOT NULL,
    LICENSE_TYPE NVARCHAR(50) NOT NULL,
    PreviousLevelID INT, -- Assuming this is a reference to the previous version of the software
    FOREIGN KEY (PreviousLevelID) REFERENCES SOFTWARE (SOFTWARE_ID)
);

CREATE TABLE LICENSES (
    LICENSE_ID INT IDENTITY(1,1) PRIMARY KEY,
    SOFTWARE_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    LICENSE_COST DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (SOFTWARE_ID) REFERENCES SOFTWARE(SOFTWARE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE ROOM_CLASSES (
    CLASS_ID INT IDENTITY(1,1) PRIMARY KEY,
    CLASS_NAME NVARCHAR(50) NOT NULL UNIQUE,
    USER_ID INT NOT NULL, -- Added field to relate to the USERS table
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE CLASS_HISTORY (
    HISTORY_ID INT IDENTITY(1,1) PRIMARY KEY,
    CLASS_ID INT NOT NULL,
    NEW_CLASS_NAME NVARCHAR(50) NOT NULL,
    CHANGE_DATE DATE NOT NULL,
    FOREIGN KEY (CLASS_ID) REFERENCES ROOM_CLASSES(CLASS_ID)
);


CREATE FUNCTION GetLicenseUsageData (
    @start_date DATE,
    @end_date DATE
)
RETURNS TABLE AS RETURN
(
    SELECT L.*, R.CLASS_NAME
    FROM LICENSES L
    INNER JOIN ROOM_CLASSES R ON L.USER_ID = R.USER_ID
    WHERE L.START_DATE >= @start_date AND L.END_DATE <= @end_date
);

DECLARE @start_date DATE = '2024-01-01';
DECLARE @end_date DATE = '2024-12-31';

-- Вызов функции и вывод результатов
SELECT *
FROM dbo.GetLicenseUsageData(@start_date, @end_date)